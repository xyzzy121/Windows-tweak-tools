<!DOCTYPE html>
<html lang="en">
<head>

<meta charset="utf-8">
<meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=0.9, maximum-scale=0.9">
<meta itemprop="name" content="Unicode in Rainmeter - Rainmeter Docs">
<meta property="og:title" content="Unicode in Rainmeter - Rainmeter Docs">
<meta property="og:type" content="website">
<meta property="og:url" content="https://www.rainmeter.net">
<meta property="og:image" content="https://www.rainmeter.net/img/media_image.png">
<meta property="og:site_name" content="Rainmeter">
<meta property="og:locale" content="en_US">

<title>Unicode in Rainmeter - Rainmeter Documentation</title>

<link rel="stylesheet" href="..\..\css\bootstrap.min.css">
<link rel="stylesheet" href="..\..\css\rainmeter.css">
<link rel="stylesheet" href="..\..\css\jquery.fancybox.min.css">
<link rel="stylesheet" href="..\..\css-1?family=Source+Sans+Pro:300,400,600">
<link href="..\..\css-2?family=Nunito:400,700" rel="stylesheet">

<link rel="shortcut icon" href="..\..\favicon.ico">
<meta name="generator" content="Hexo 5.4.0"></head>
<body>


<nav id="navbar" class="navbar navbar-expand-lg navbar-dark">
<div class="container">
<a class="navbar-brand" href="..\..\index.htm"><img src="..\..\img\logo_nav.png" alt=""></a>
<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mainNavigation" aria-controls="mainNavigation" aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse justify-content-end" id="mainNavigation">
<ul class="navbar-nav order-12">
<li class="nav-item>">
<a class="nav-link" href="//www.rainmeter.net/">Home</a>
</li>
<li class="nav-item ">
<a class="nav-link" href="..\..\index.html">Documentation</a>
</li>
<li class="nav-item>">
<a class="nav-link" href="//rainmeter.net/discover">Discover</a>
</li>
<li class="nav-item>">
<a class="nav-link" href="//forum.rainmeter.net/">Community</a>
</li>
<div class="dropdown-divider"></div>
</ul></div>
</div>
</nav>
<div id="content">
<div id="nav-button" class="docs-nav-button">
<div class="container d-flex flex-row align-items-center">
<svg onclick="openNavMenu()" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-menu"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>
<a onclick="openNavMenu()">Open navigation</a>
</div>
</div>
<div class="container">
<div class="row">

<div id="menu" class="docs-nav col-12 col-lg-3">
<h4 id="category"><a href="..\index.htm">Tips &amp; Tricks</a></h4>
<svg class="closeButton" onclick="closeNavMenu()" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
<form id="search-form" method="get" action="https://www.google.com/search">
<input name="sitesearch" value="docs.rainmeter.net" type="hidden">
<input class="form-control" id="search" name="q" maxlength="255" size="16" placeholder="Search" type="text">
</form>
<hr>
<nav id="sidenav" class="sidenav">
<h4>Contents</h4>
<ul class="docs-nav-block">
<li><a class="active" href="..\index.htm#BeyondTheBasics">Beyond the Basics</a>
<li><a href="..\index.htm#GoodToKnow">Good To Know</a>
<li><a href="..\index.htm#GettingThingsDone">Getting Things Done</a>
</li></ul>
<h4>More</h4>
<ul class="docs-nav-block">
<li><a href="..\..\manual\index.htm">Manual</a>
<li><a href="..\..\snippets\index.htm">Snippets</a>
<li><a href="..\..\developers\index.htm">Developers</a>
<li><a href="..\..\history\index.htm">Version History</a>
</li></ul>
</nav>
</div>

<div class="docs-content col-12 col-lg-9">
<h1 class="page-title">Unicode in Rainmeter</h1>
<hr>

<p>Given the international audience of Rainmeter, one of the things that comes up regularly is how to use and display non-ASCII character sets in skins.</p>
<h2>Encoding standards</h2>
<p>Without getting into all the arcane details of how encoding is done in the computer world, there are basically two ways things you use in Rainmeter are going to be encoded.</p>
<h3>ANSI</h3>
<p>This is an informal (and really inaccurate) term used by text editors for files encoded to display the ASCII - Extended ASCII character set. ASCII is the first 129 characters, including A-Z, a-z, numbers, punctuation, and some control characters and symbols.</p>
<p>The "extended" part of the set from characters 129 to 256 will be based on the Windows Codepage (locale) active in your Windows system. For people in the USA and Western Europe, this will be <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Windows-1252">Windows-1252</a> (ISO 8859-1), which will display international characters from European languages. Things like umlauts, accents and graves. However, if you for instance have your Windows locale set to "Russian", it will use <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Windows-1251">Windows-1251</a> (ISO 8859-5), which will replace the European characters with Cyrillic.</p>
<p>If you won't be trying to use characters other than standard (0-128) ASCII in your skins, or do not intend to distribute your skins to folks using other languages on their system, then just staying with the default ANSI encoding in your text editor is going to work fine for any files used in Rainmeter, and you probably don't even need to read the rest of this. However...</p>
<h3>Unicode</h3>
<p><a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Unicode">Unicode</a> is a standard for displaying a much wider variety of characters on any system, without worrying about localization or code pages. It includes all the ASCII characters, pretty much every character in every alphabet, as well as a large number of special characters and symbols.</p>
<p>There are several ways that characters are encoded in the Unicode standard. The ones you will see most often, and which we will deal with below are:</p>
<ul>
<li><b>Unicode / UTF-16 LE / UCS-2 Little Endian</b><br>
This 16-bit encoding standard is what Windows uses by default, to manage and display information in all Windows applications.</li>
<li><b>UTF-8</b><br>
This 8-bit encoding standard is the most popular way of encoding text in the World-Wide-Web.</li>
<li><b>UTF-8 With BOM</b><br>
A variant of the UTF-8 standard with a <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Byte_order_mark">Byte Order Mark</a>.</li>
</ul>
<h2>Using Unicode in Rainmeter</h2>
<h3>Rainmeter skins</h3>
<p>Like all Windows applications (since Windows 98), Rainmeter manages and displays all text using the UTF-16 LE Unicode standard. If you wish to embed Unicode characters in Rainmeter .ini (skin) .inc (include) or text files read by the Quote plugin, simply encode the file as:</p>
<ul>
<li><b>UTF-16 LE</b> (Windows Notepad.exe)</li>
<li><b>UTF-16 LE BOM</b> (Notepad++)</li>
<li><b>UTF-16 LE</b> (Sublime Text)</li>
</ul>
<p>It's that simple. Now you can embed strings like Самое прекрасное в стандартах то, что есть так много, чтобы выбрать из. in your file(s) and Rainmeter will handle them properly on any user's system.</p>
<p><i>We will refer to this as UTF-16 from here out. While the naming convention varies from editor to editor, it is basically the same standard in each.</i></p>
<p><i>NEVER encode any of these files in UTF-8. Rainmeter and the Quote plugin will not be able to properly read them.</i></p>
<h2>Using Unicode with WebParser</h2>
<p>In order to reduce the amount of data that must be transmitted to support Unicode, and to maintain compatibility with the widest range of legacy operating systems and applications, web sites that you access with the WebParser plugin will almost always be encoded in UTF-8. The WebParser plugin automatically uses this encoding standard when retrieving web sites, and converts the text to UTF-16 for Rainmeter to handle. There is nothing you need to do with any local file encoding for this to work correctly and seamlessly on any user's system.</p>
<h3>Using the file:// protocol with WebParser to read local files</h3>
<p>If you are going to be creating a local text file containing Unicode characters that you want to parse with WebParser using the <code>URL=File://SomeFile.txt</code> URL option, you can encode this file as UTF-16. However, there is another step required in Rainmeter to have this work correctly.</p>
<p>As noted above, WebParser assumes all resources it accesses (web sites or files) are encoded in the web-standard UTF-8. When parsing a local file encoded in UTF-16, you must set a <code>Codepage=1200</code> option on the parent WebParser measure reading the file. Using the <a href="..\..\manual\measures\webparser\index.htm#CodePage">Codepage</a> of 1200 will tell WebParser that the resource is encoded as UTF-16.</p>
<p>An alternative is to encode the file as UTF-8. This will allow WebParser to read the file correctly without any Codepage setting. I tend to recommend using UTF-16 however, as I prefer the relative simplicity of just encoding all files in UTF-16 in Rainmeter if Unicode is desired. (The only exception then will be some rare cases with Lua scripting involving reading/writing external files, as noted below.)</p>
<h2>Using Unicode with Lua scripting</h2>
<p><i><b>Note:</b> Unicode with Lua requires at least Rainmeter 3.0.</i></p>
<p>If you are using a Lua script with your skin, any use of Unicode pretty much anywhere in the skin will require that that .lua script file be encoded as UTF-16 to work. This would include:</p>
<ul>
<li>Embedding Unicode characters in your Lua script file.</li>
<li>Having the Lua read variables, options or measure values from the skin that contain Unicode characters.</li>
<li>Having the Lua use the value of a WebParser measure that contains Unicode characters.</li>
</ul>
<p>Simply encode the .lua file as UTF-16, and it will work seamlessly when you are using Unicode in the Lua or in Rainmeter.</p>
<p><i>NEVER encode a .lua script file in UTF-8. The Rainmeter implementation of Lua will not be able to properly read it.</i></p>
<h3>Caveats with Unicode in Lua</h3>
<p>The Lua programming language is an older language, and is designed to be very platform independent. The result is that the native string libraries in Lua are written in such a way that the handling of multi-byte Unicode characters is imperfect. Without getting too far under the covers, the language internally always handles strings as 8-bit single-byte characters. What this means is that certain string functions that use hard-coded character positions (i.e. "return the 4th character from the string") can have incorrect results with multi-byte Unicode character strings.</p>
<p>This will normally not be an issue, as that kind of syntax is going to be very rare in the context of Lua with Rainmeter, but it is worth understanding the implications described at the end of <a href="//forum.rainmeter.net/viewtopic.php?p=90816#p90816">this post</a>.</p>
<h3>Reading and writing external Unicode files in Lua</h3>
<p>As noted above, you must always save the Lua script .lua file encoded as UTF-16 to use Unicode with Lua and Rainmeter. However, there may be times you want to read or write to external files from your Lua script. If you want to use Unicode with these external files, things have to be handled in a particular way.</p>
<p>I mentioned earlier that Lua always treats text as 8-bit single-byte characters. What the means in this context is that in effect Lua "internally" views all text as UTF-8, even though we always have the .lua file encoded as UTF-16 to work with Rainmeter. So Lua requires that any text file it reads or creates itself be encoded in UTF-8 to handle Unicode characters properly.</p>
<h3>Reading an external file with Unicode in Lua</h3>
<p>To read an external file which will contain Unicode characters, you should encode the external file as UTF-8 with BOM.</p>
<p><i>You can do this UTF-8 without BOM, but I recommend against it. The reason is that there is literally no difference between a file encoded as ANSI with just "Hello world" in it and the same file encoded as UTF-8 without BOM. The first 128 characters of ANSI and the first 128 characters of UTF-8 are exactly the same, and it is only either the fact that the file already contains Unicode characters, or the BOM, that specifically identifies the encoding.</i></p>
<p>The upshot of this is that any text editor opening this file will see it as ANSI. If you encode the file as UTF-8 without BOM, save it, and open it again, it will be ANSI. You won't be able to add Unicode characters to it until you change the encoding to UTF-8 again, add the Unicode characters while it is still open, and save it. Then when it is opened again, it will be seen as UTF-8. Adding the BOM to the file makes it unambiguously UTF-8, and will save a lot of head scratching by users trying to edit your files.</p>
<p>Anyway, as long as your <b>.lua is encoded in UTF-16</b>, and the <b>external file is encoded in UTF-8</b>, there is nothing special you need to do to read in the file contents in Lua.</p>
<h3>Writing an external file with Unicode in Lua</h3>
<p>This is also quite simple. When Lua creates a file, it will open the file in Windows and write any string of characters you want to the file. Lua can't, and doesn't need to, "decide" or "ask" that the file be encoded in ANSI or UTF-8.</p>
<p>If you plan to write Unicode characters to the file, you will just need to first write the BOM (Byte Order Mark) to the file after you open it. Then just write away with any characters you want.</p>
<p>The act of writing the BOM to the first three characters of the file is literally all that is needed to turn an ANSI file into a UTF-8 with BOM file in Windows.</p>
<p>Ok, what is the BOM sequence of three characters? It is "EF BB BF" in hex. To write it to the file in Lua, you can either use the string <code>ï»¿</code> or the Lua character escape codes <code>\239\187\191</code>.</p>
<p>So after you open a new file in write mode, first just:</p>
<p><code>FileHandle:write('\239\187\191')</code> or <code>FileHandle:write('ï»¿')</code></p>
<p>Then you can write anything else you want or need to the file, and when done, close it.</p>
<p>The file you created will be UTF-8 with BOM, and will properly support all Unicode characters.</p>
<h3>Reading and writing in Lua example:</h3>
<p>LuaUTF8.ini (not encoded in anything special, just ANSI):<br>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Rainmeter]</span></span><br><span class="line"><span class="attr">Update</span>=<span class="number">1000</span></span><br><span class="line"><span class="attr">DynamicWindowSize</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="section">[MeasureRead]</span></span><br><span class="line"><span class="attr">Measure</span>=Calc</span><br><span class="line"><span class="attr">Formula</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">IfEqualValue</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">IfEqualAction</span>=[!CommandMeasure MeasureScript <span class="string">&quot;Read()&quot;</span>][!UpdateMeter *][!Redraw]</span><br><span class="line"></span><br><span class="line"><span class="section">[MeasureWrite]</span></span><br><span class="line"><span class="attr">Measure</span>=Calc</span><br><span class="line"><span class="attr">Formula</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">IfEqualValue</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">IfEqualAction</span>=[!CommandMeasure MeasureScript <span class="string">&quot;Write()&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="section">[MeasureScript]</span></span><br><span class="line"><span class="attr">Measure</span>=Script</span><br><span class="line">ScriptFile=<span class="comment">#CURRENTPATH#LuaUTF8.lua</span></span><br><span class="line"><span class="attr">UpdateDivider</span>=-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="section">[MeterUTF8]</span></span><br><span class="line"><span class="attr">Meter</span>=String</span><br><span class="line"><span class="attr">FontSize</span>=<span class="number">12</span></span><br><span class="line"><span class="attr">FontColor</span>=<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span></span><br><span class="line"><span class="attr">SolidColor</span>=<span class="number">60</span>,<span class="number">60</span>,<span class="number">60</span>,<span class="number">255</span></span><br><span class="line"><span class="attr">Padding</span>=<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span></span><br><span class="line"><span class="attr">AntiAlias</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>
</p>
<p>LuaUTF8.lua (encoded in UTF-16 LE):<br>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Initialize</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line">	<span class="keyword">local</span> FilePath = SKIN:MakePathAbsolute(<span class="string">&#x27;TestIn.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">local</span> File = <span class="built_in">io</span>.<span class="built_in">open</span>(FilePath, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> <span class="keyword">not</span> File <span class="keyword">then</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&#x27;LuaUTF8: unable to open file for read at &#x27;</span> .. FilePath)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">local</span> Contents = &#123;&#125;</span><br><span class="line">	<span class="keyword">for</span> Line <span class="keyword">in</span> File:<span class="built_in">lines</span>() <span class="keyword">do</span></span><br><span class="line">		<span class="built_in">table</span>.<span class="built_in">insert</span>(Contents, Line)</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">	File:<span class="built_in">close</span>()</span><br><span class="line"></span><br><span class="line">	SKIN:Bang(<span class="string">&#x27;!SetOption&#x27;</span>, <span class="string">&#x27;MeterUTF8&#x27;</span>, <span class="string">&#x27;Text&#x27;</span>, Contents[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Write</span><span class="params">()</span></span></span><br><span class="line">	<span class="keyword">local</span> FilePath = SKIN:MakePathAbsolute(<span class="string">&#x27;TestOut.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">local</span> File = <span class="built_in">io</span>.<span class="built_in">open</span>(FilePath, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> <span class="keyword">not</span> File <span class="keyword">then</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&#x27;LuaUTF8: unable to open file for write at &#x27;</span> .. FilePath)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">local</span> BOM = <span class="string">&#x27;\239\187\191&#x27;</span></span><br><span class="line"></span><br><span class="line">	File:<span class="built_in">write</span>(BOM)</span><br><span class="line">	File:<span class="built_in">write</span>(<span class="string">&#x27;Бешеные псы и англичане&#x27;</span>)</span><br><span class="line"></span><br><span class="line">	File:<span class="built_in">close</span>()</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
</p>
<p>TestIn.txt (encoded in UTF-8 with BOM):<br>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Испытание некоторых русский текст</span><br></pre></td></tr></table></figure>
</p>
</div>
</div>
</div>
</div>

<footer id="footer">
<div class="container">
<div class="row">
<div class="col-6">Made with ❤ by the community.</div>
<div class="col-6 text-right text-md-right">Icons by <a target="_blank" rel="noopener" href="http://www.freepik.com" alt="Freepik">Freepik</a> and <a target="_blank" rel="noopener" href="https://feathericons.com/" alt="feathericons">feathericons.com</a></div>
</div>
</div>
</footer>

<script src="..\..\js\main.js"></script>
<script src="..\..\js\jquery-3.2.1.slim.min.js"></script>
<script src="..\..\js\bootstrap.min.js"></script>
<script src="..\..\js\ahk-sliding-panel.js"></script>
<script src="..\..\js\jquery.fancybox.min.js"></script>

<script>
		// set slideout menu variables
		var docsnav = new ahk_slideout({
		  id: "menu",
		  side: "left",
		  width: "18rem",
		  touch_boundary: "50",
		  slide_time: "0.2"
		})

		// function to toggle menu
		function openNavMenu() {
		  docsnav.openMenu()
		}
		// function to close menu
		function closeNavMenu() {
		  docsnav.closeMenu()
		}

		// when scrolling below 90, add sticky class to nav-button
		$(function() {
		  var header = $("#nav-button");
		  $(window).scroll(function() {
		    var scroll = $(window).scrollTop();
		    if (scroll >= 90) {
		      header.addClass("sticky");
		    } else {
		      header.removeClass("sticky");
		    }
		  });
		});
	</script>
</body>
</html>
